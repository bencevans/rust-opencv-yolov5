name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always



jobs:
  build:

    defaults:
      run:
        shell: bash -el {0}

    strategy:
      matrix:
        os:
          - image: ubuntu-20.04
            family: linux
            triplet: x64-linux
            cuda: false
          - image: ubuntu-20.04
            family: linux
            triplet: x64-linux
            cuda: true
          - image: macos-11
            family: osx
            triplet: x64-osx
            cuda: false
          - image: windows-2022
            family: windows
            triplet: x64-windows-static-md
            cuda: false
          - image: windows-2022
            family: windows
            triplet: x64-windows-static-md
            cuda: true

    runs-on: ${{ matrix.os.image }}

    steps:

    - name: Install Linux System Dependencies
      run: sudo apt-get update && sudo apt-get install -y libdbus-1-3 libdbus-1-dev libxi-dev libxtst-dev libgles2-mesa-dev libgtk-3-dev
      if: runner.os == 'Linux'

    - name: Install Windows System Dependencies
      run: choco install -y wget
      if: runner.os == 'Windows'
    
    - name: Install Conda
      uses: conda-incubator/setup-miniconda@v2
      with:
        auto-update-conda: true
        python-version: 3.7
        channels: conda-forge

    - name: Install CUDA
      run: conda install -c conda-forge cudatoolkit cudnn nvcc_linux-64 nvcc_win-64
      if: matrix.os.cuda == true

    - name: Setup Rust Toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set VCPKG_ROOT
      run: echo "VCPKG_ROOT=$VCPKG_INSTALLATION_ROOT" >> $GITHUB_ENV

    - name: Cache vcpkg
      uses: actions/cache@v3
      with:
        path: |
          ${{ env.VCPKG_ROOT }}/installed
          ${{ env.VCPKG_ROOT }}/packages
        key: ${{ matrix.os.image }}-vcpkg-opencv4[dnn]-${{ matrix.os.triplet }}-${{ matrix.os.cuda }}

    - name: Build OpenCV
      run: vcpkg install opencv4[dnn]:${{ matrix.os.triplet }}
      if: matrix.os.cuda == false

    - name: Build OpenCV with CUDA
      run: vcpkg install opencv4[dnn,cuda]:${{ matrix.os.triplet }}
      if: matrix.os.cuda == true

    - name: Cache Rust
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Build
      run: cargo build --verbose

    - name: Download Model
      run: wget -q https://github.com/bencevans/megadetector-onnx/releases/download/v0.1.0/md_v5a.0.0-640x640.onnx

    - name: Run tests
      run: cargo test --verbose
